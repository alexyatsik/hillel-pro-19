"use strict";function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function _defineProperties(t,e){for(var o=0;o<e.length;o++){var n=e[o];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function _createClass(t,e,o){return e&&_defineProperties(t.prototype,e),o&&_defineProperties(t,o),t}var DOMElement=function(){function o(t,e){_classCallCheck(this,o),this.element=document.createElement(t),e.appendChild(this.element)}return _createClass(o,[{key:"addClass",value:function(){var t;return(t=this.element.classList).add.apply(t,arguments),this.element}},{key:"removeClass",value:function(){var t;return(t=this.element.classList).remove.apply(t,arguments),this.element}},{key:"click",value:function(t){return this.element.addEventListener("click",t,event),this.element}},{key:"HTML",value:function(t){return this.element.innerHTML=t,this.element}},{key:"attr",value:function(t,e){return this.element.setAttribute(t,e),this.element}},{key:"get",value:function(){return this.element}}]),o}();function _typeof(t){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function _createSuper(n){return function(){var t,e=_getPrototypeOf(n);if(_isNativeReflectConstruct()){var o=_getPrototypeOf(this).constructor;t=Reflect.construct(e,arguments,o)}else t=e.apply(this,arguments);return _possibleConstructorReturn(this,t)}}function _possibleConstructorReturn(t,e){return!e||"object"!==_typeof(e)&&"function"!=typeof e?_assertThisInitialized(t):e}function _assertThisInitialized(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function _isNativeReflectConstruct(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(t){return!1}}function _getPrototypeOf(t){return(_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function _inherits(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&_setPrototypeOf(t,e)}function _setPrototypeOf(t,e){return(_setPrototypeOf=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var Button=function(){_inherits(r,DOMElement);var n=_createSuper(r);function r(t,e){var o;return _classCallCheck(this,r),(o=n.call(this,"input",t)).value,o.element.setAttribute("type","button"),o.element.setAttribute("value",e),o.element.classList.add("input-button"),o}return r}();function _typeof(t){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function _createSuper(n){return function(){var t,e=_getPrototypeOf(n);if(_isNativeReflectConstruct()){var o=_getPrototypeOf(this).constructor;t=Reflect.construct(e,arguments,o)}else t=e.apply(this,arguments);return _possibleConstructorReturn(this,t)}}function _possibleConstructorReturn(t,e){return!e||"object"!==_typeof(e)&&"function"!=typeof e?_assertThisInitialized(t):e}function _assertThisInitialized(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function _isNativeReflectConstruct(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(t){return!1}}function _getPrototypeOf(t){return(_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function _inherits(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&_setPrototypeOf(t,e)}function _setPrototypeOf(t,e){return(_setPrototypeOf=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var Input=function(){_inherits(s,DOMElement);var i=_createSuper(s);function s(t,e,o,n){var r;return _classCallCheck(this,s),(r=i.call(this,"input",t)).element.setAttribute("type","text"),r.element.setAttribute("name",e),r.element.setAttribute("placeholder",o),n&&r.element.setAttribute("value",n),r.element.classList.add("input-text"),r}return s}();function _typeof(t){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function _createSuper(n){return function(){var t,e=_getPrototypeOf(n);if(_isNativeReflectConstruct()){var o=_getPrototypeOf(this).constructor;t=Reflect.construct(e,arguments,o)}else t=e.apply(this,arguments);return _possibleConstructorReturn(this,t)}}function _possibleConstructorReturn(t,e){return!e||"object"!==_typeof(e)&&"function"!=typeof e?_assertThisInitialized(t):e}function _assertThisInitialized(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function _isNativeReflectConstruct(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(t){return!1}}function _getPrototypeOf(t){return(_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function _inherits(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&_setPrototypeOf(t,e)}function _setPrototypeOf(t,e){return(_setPrototypeOf=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var Form=function(){_inherits(n,DOMElement);var o=_createSuper(n);function n(t){var e;return _classCallCheck(this,n),(e=o.call(this,"form",t)).attr("id","crudForm"),e.table=new DOMElement("table",e.element).get(),e}return n}();function _typeof(t){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function _defineProperties(t,e){for(var o=0;o<e.length;o++){var n=e[o];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function _createClass(t,e,o){return e&&_defineProperties(t.prototype,e),o&&_defineProperties(t,o),t}function _createSuper(n){return function(){var t,e=_getPrototypeOf(n);if(_isNativeReflectConstruct()){var o=_getPrototypeOf(this).constructor;t=Reflect.construct(e,arguments,o)}else t=e.apply(this,arguments);return _possibleConstructorReturn(this,t)}}function _possibleConstructorReturn(t,e){return!e||"object"!==_typeof(e)&&"function"!=typeof e?_assertThisInitialized(t):e}function _assertThisInitialized(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function _isNativeReflectConstruct(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(t){return!1}}function _getPrototypeOf(t){return(_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function _inherits(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&_setPrototypeOf(t,e)}function _setPrototypeOf(t,e){return(_setPrototypeOf=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var ActionBar=function(){_inherits(s,DOMElement);var i=_createSuper(s);function s(t,e,o){var n;_classCallCheck(this,s),(n=i.call(this,"div",t)).itemId=e,n.addClass("action-bar");for(var r=0;r<o.length;r++)n.createButton(o[r]);return n}return _createClass(s,[{key:"createButton",value:function(t){var e=new Button(this.element,t).get();e.dataset.action=t.toLowerCase(),e.dataset.id=this.itemId}}]),s}();function _typeof(t){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function _createSuper(n){return function(){var t,e=_getPrototypeOf(n);if(_isNativeReflectConstruct()){var o=_getPrototypeOf(this).constructor;t=Reflect.construct(e,arguments,o)}else t=e.apply(this,arguments);return _possibleConstructorReturn(this,t)}}function _possibleConstructorReturn(t,e){return!e||"object"!==_typeof(e)&&"function"!=typeof e?_assertThisInitialized(t):e}function _assertThisInitialized(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function _isNativeReflectConstruct(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(t){return!1}}function _getPrototypeOf(t){return(_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function _inherits(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&_setPrototypeOf(t,e)}function _setPrototypeOf(t,e){return(_setPrototypeOf=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var AddForm=function(){_inherits(r,Form);var n=_createSuper(r);function r(t){var e;_classCallCheck(this,r),(e=n.call(this,t)).idRow=new DOMElement("tr",e.table).get(),new DOMElement("th",e.idRow).HTML("ID");var o=new DOMElement("td",e.idRow).get();return new Input(o,"id","",getUniqueId()).get().disabled=!0,e.taskRow=new DOMElement("tr",e.table).get(),new DOMElement("th",e.taskRow).HTML("Task"),e.taskNest=new DOMElement("td",e.taskRow).get(),new Select(e.taskNest,"task",apis.tasks).attr("id","select-task"),e.taskRow=new DOMElement("tr",e.table).get(),new DOMElement("th",e.taskRow).HTML("Priority"),e.taskNest=new DOMElement("td",e.taskRow).get(),new Select(e.taskNest,"priority",apis.priorities).attr("id","select-priorities"),e.taskRow=new DOMElement("tr",e.table).get(),new DOMElement("th",e.taskRow).HTML("Status"),e.taskNest=new DOMElement("td",e.taskRow).get(),new Select(e.taskNest,"status",apis.statuses).attr("id","select-statuses"),e.taskRow=new DOMElement("tr",e.table).get(),new DOMElement("th",e.taskRow).HTML("Description"),e.taskNest=new DOMElement("td",e.taskRow).get(),new Input(e.taskNest,"description","Task description"),e.timestampRow=new DOMElement("tr",e.table).get(),new DOMElement("th",e.timestampRow).HTML("Added"),e.timestampRow=new DOMElement("td",e.timestampRow).get(),new Input(e.timestampRow,"timestamp","",moment().format("Do MMM, h:mm a")).get().disabled=!0,e}return r}();function _typeof(t){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function _createSuper(n){return function(){var t,e=_getPrototypeOf(n);if(_isNativeReflectConstruct()){var o=_getPrototypeOf(this).constructor;t=Reflect.construct(e,arguments,o)}else t=e.apply(this,arguments);return _possibleConstructorReturn(this,t)}}function _possibleConstructorReturn(t,e){return!e||"object"!==_typeof(e)&&"function"!=typeof e?_assertThisInitialized(t):e}function _assertThisInitialized(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function _isNativeReflectConstruct(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(t){return!1}}function _getPrototypeOf(t){return(_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function _inherits(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&_setPrototypeOf(t,e)}function _setPrototypeOf(t,e){return(_setPrototypeOf=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var EditForm=function(){_inherits(i,Form);var r=_createSuper(i);function i(t,e){var o;_classCallCheck(this,i),(o=r.call(this,t)).todo=getItemFromLocalStorage("todos",e),o.idRow=new DOMElement("tr",o.table).get(),new DOMElement("th",o.idRow).HTML("ID");var n=new DOMElement("td",o.idRow).get();return new Input(n,"id","",o.todo.id).get().disabled=!0,o.taskRow=new DOMElement("tr",o.table).get(),new DOMElement("th",o.taskRow).HTML("Task"),o.taskNest=new DOMElement("td",o.taskRow).get(),new Select(o.taskNest,"task",apis.tasks,o.todo.task).attr("id","select-task"),o.taskRow=new DOMElement("tr",o.table).get(),new DOMElement("th",o.taskRow).HTML("Priority"),o.taskNest=new DOMElement("td",o.taskRow).get(),new Select(o.taskNest,"priority",apis.priorities,o.todo.priority).attr("id","select-priorities"),o.taskRow=new DOMElement("tr",o.table).get(),new DOMElement("th",o.taskRow).HTML("Status"),o.taskNest=new DOMElement("td",o.taskRow).get(),new Select(o.taskNest,"status",apis.statuses,o.todo.status).attr("id","select-statuses"),o.taskRow=new DOMElement("tr",o.table).get(),new DOMElement("th",o.taskRow).HTML("Description"),o.taskNest=new DOMElement("td",o.taskRow).get(),"No description"===o.todo.description?new Input(o.taskNest,"description",o.todo.description):new Input(o.taskNest,"description","Task description",o.todo.description),o.timestampRow=new DOMElement("tr",o.table).get(),new DOMElement("th",o.timestampRow).HTML("Added"),o.timestampRow=new DOMElement("td",o.timestampRow).get(),new Input(o.timestampRow,"timestamp","",o.todo.timestamp).get().disabled=!0,o}return i}();function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function _defineProperties(t,e){for(var o=0;o<e.length;o++){var n=e[o];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function _createClass(t,e,o){return e&&_defineProperties(t.prototype,e),o&&_defineProperties(t,o),t}var Modal=function(){function p(t,e,o){_classCallCheck(this,p),this.modal=document.createElement("div"),this.modal.classList.add("modal","fade"),this.modal.setAttribute("id",t),this.modal.setAttribute("tabindex","-1"),this.modal.setAttribute("role","dialog"),this.modal.setAttribute("aria-labelledby","".concat(t,"Label")),this.modal.setAttribute("aria-hidden",!0),this.modal.dataset.backdrop="static";var n=new DOMElement("div",this.modal);n.addClass("modal-dialog"),n.attr("role","document");var r=new DOMElement("div",n.get());r.addClass("modal-content");var i=new DOMElement("div",r.get());i.addClass("modal-header");var s=new DOMElement("h5",i.get());s.addClass("modal-title"),s.attr("id","".concat(t,"Label"));var a=new DOMElement("button",i.get());a.addClass("close"),a.attr("type","button"),a.attr("aria-label","Close"),a.attr("data-dismiss","modal"),a.HTML('<span aria-hidden="true">&times;</span>'),a.click(o[0]);var c=new DOMElement("div",r.get());c.addClass("modal-body"),c.attr("id","".concat(t,"Content"));var l=new DOMElement("div",r.get());l.addClass("modal-footer");var u=new DOMElement("button",l.get());u.addClass("btn","btn-secondary"),u.attr("type","button"),u.attr("data-dismiss","modal"),u.click(o[0]);var f=new DOMElement("button",l.get());f.addClass("btn","btn-primary"),f.attr("type","button"),f.click(o[1]),s.HTML(e),u.HTML("Close"),f.HTML("Apply")}return _createClass(p,[{key:"get",value:function(){return this.modal}}]),p}();function _typeof(t){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function _createSuper(n){return function(){var t,e=_getPrototypeOf(n);if(_isNativeReflectConstruct()){var o=_getPrototypeOf(this).constructor;t=Reflect.construct(e,arguments,o)}else t=e.apply(this,arguments);return _possibleConstructorReturn(this,t)}}function _possibleConstructorReturn(t,e){return!e||"object"!==_typeof(e)&&"function"!=typeof e?_assertThisInitialized(t):e}function _assertThisInitialized(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function _isNativeReflectConstruct(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(t){return!1}}function _getPrototypeOf(t){return(_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function _inherits(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&_setPrototypeOf(t,e)}function _setPrototypeOf(t,e){return(_setPrototypeOf=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var Select=function(){_inherits(c,DOMElement);var a=_createSuper(c);function c(t,e,o,n){var r;_classCallCheck(this,c),(r=a.call(this,"select",t)).attr("name",e),r.coverOption=new DOMElement("option",r.element),n&&"Not defined"!==n?(r.coverOption.attr("value",n),r.coverOption.HTML(n)):(r.coverOption.attr("value","0"),r.coverOption.HTML("Not defined"));for(var i=0;i<o.length;i++)if(n!==o[i].value){var s=new DOMElement("option",r.element);s.HTML(o[i].value),s.attr("value",o[i].value)}return r}return c}();function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function _defineProperties(t,e){for(var o=0;o<e.length;o++){var n=e[o];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function _createClass(t,e,o){return e&&_defineProperties(t.prototype,e),o&&_defineProperties(t,o),t}var Todo=function(){function s(t,e,o,n,r,i){_classCallCheck(this,s),this.id=t,this.status=n,this.priority=o,this.task=e,this.description=r||"No description",this.timestamp=i,this.root}return _createClass(s,[{key:"get",value:function(){this.root=document.createElement("tr"),this.root.dataset.id=this.id,new DOMElement("td",this.root).HTML(this.task),new DOMElement("td",this.root).HTML(this.priority),new DOMElement("td",this.root).HTML(this.status),new DOMElement("td",this.root).HTML(this.description),new DOMElement("td",this.root).HTML(this.timestamp);var t=new DOMElement("td",this.root);return new ActionBar(t.get(),this.id,["Edit","Delete"]),this.root}}]),s}();function _typeof(t){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function _defineProperties(t,e){for(var o=0;o<e.length;o++){var n=e[o];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function _createClass(t,e,o){return e&&_defineProperties(t.prototype,e),o&&_defineProperties(t,o),t}function _createSuper(n){return function(){var t,e=_getPrototypeOf(n);if(_isNativeReflectConstruct()){var o=_getPrototypeOf(this).constructor;t=Reflect.construct(e,arguments,o)}else t=e.apply(this,arguments);return _possibleConstructorReturn(this,t)}}function _possibleConstructorReturn(t,e){return!e||"object"!==_typeof(e)&&"function"!=typeof e?_assertThisInitialized(t):e}function _assertThisInitialized(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function _isNativeReflectConstruct(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(t){return!1}}function _getPrototypeOf(t){return(_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function _inherits(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&_setPrototypeOf(t,e)}function _setPrototypeOf(t,e){return(_setPrototypeOf=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var apis,TodoList=function(){_inherits(n,DOMElement);var o=_createSuper(n);function n(t){var e;return _classCallCheck(this,n),(e=o.call(this,"table",t)).todos=[],e.attr("id","todosList"),e.header(),e.click(actionsHandler),e}return _createClass(n,[{key:"addTodo",value:function(){for(var t=0;t<arguments.length;t++)this.todos.push(arguments[t])}},{key:"getTodosList",value:function(){return this.todos.slice()}},{key:"header",value:function(){var t=new DOMElement("tr",this.element);new DOMElement("th",t.get()).HTML("Task"),new DOMElement("th",t.get()).HTML("Priority"),new DOMElement("th",t.get()).HTML("Status"),new DOMElement("th",t.get()).HTML("Description"),new DOMElement("th",t.get()).HTML("Added"),new DOMElement("th",t.get()).HTML("Actions")}},{key:"fillList",value:function(){this.HTML(""),this.header();for(var t=0;t<this.todos.length;t++)this.element.appendChild(this.todos[t].get())}},{key:"sort",value:function(){}}]),n}();function loadTodoList(){destroy("#todosList");var t=new TodoList(seek("#app")),e=getLocalStorage("todos");if(e){for(var o=0;o<e.length;o++)Object.setPrototypeOf(e[o],new Todo),t.addTodo(e[o]);t.fillList()}}function isInputCorrect(t){var e=!0,o=seek("#select-task"),n=seek("#select-priorities"),r=seek("#select-statuses"),i=document.getElementsByClassName("error-message");o.classList.remove("error-block"),n.classList.remove("error-block"),r.classList.remove("error-block");for(var s=0;s<i.length;s++)i[s].remove();"0"===t.task.value&&(o.classList.add("error-block"),e=!1),"0"===t.priority.value&&(n.classList.add("error-block"),e=!1),"0"===t.status.value&&(r.classList.add("error-block"),e=!1),i=document.getElementsByClassName("error-block");for(var a=0;a<i.length;a++){var c=new DOMElement("span",i[a]);c.addClass("error-message"),c.HTML("Incorrect input")}return e}function getApis(){fetch("data.json").then(function(t){return t.json()}).then(function(t){apis=t}).then(function(){checkApis()}).then(function(){loadTodoList()}).catch(function(t){console.log("rejected",t)})}function checkApis(){for(var t=getLocalStorage("todos"),e=0;e<t.length;e++){for(var o=t[e],n=!1,r=0;r<apis.statuses.length;r++)if(o.status===apis.statuses[r].value){n=!0;break}n||(t[e].status="Not defined"),n=!1;for(var i=0;i<apis.priorities.length;i++)if(o.priority===apis.priorities[i].value){n=!0;break}n||(t[e].priority="Not defined"),n=!1;for(var s=0;s<apis.tasks.length;s++)if(o.task===apis.tasks[s].value){n=!0;break}n||(t[e].task="Not defined")}localStorage.setItem("todos",JSON.stringify(t))}function addItemToPageContent(t){seek("#todosList").appendChild(t.get())}function updateItemInPageContent(t){var e=document.querySelector('#todosList > [data-id="'.concat(t.id,'"]'));seek("#todosList").replaceChild(t.get(),e)}function deleteItemFromPage(t){document.querySelector('tr[data-id="'.concat(t,'"]')).remove()}function deleteConfirmationCheck(t){t.hidden=!0,new ActionBar(t.parentElement,t.dataset.id,["Confirm","Cancel"])}function windowHandler(){getApis(),new Button(seek("#app"),"Add TODO").click(addTodoHandler),loadTodoList()}function addTodoHandler(){seek("#app").appendChild(new Modal("modalWindowAdd","Add new item",[closeButtonHandler,addConfirmedHandler]).get()),new AddForm(seek("#modalWindowAddContent")),$("#modalWindowAdd").modal("show")}function addConfirmedHandler(){var t=document.forms.crudForm,e=new Todo(t.id.value,t.task.value,t.priority.value,t.status.value,t.description.value,t.timestamp.value);isInputCorrect(t)&&(addItemToLocalStorage("todos",e),addItemToPageContent(e),$("#modalWindowAdd").modal("hide"),destroy("#modalWindowAdd"))}function closeButtonHandler(){destroy("#modalWindowEdit"),destroy("#modalWindowAdd")}function actionsHandler(t){var e=t.target.dataset.action,o=t.target.dataset.id;switch(e){case"edit":seek("#app").appendChild(new Modal("modalWindowEdit","Edit item",[closeButtonHandler,EditConfirmedHandler]).get()),new EditForm(seek("#modalWindowEditContent"),o),$("#modalWindowEdit").modal("show");break;case"delete":deleteConfirmationCheck(t.target);break;case"cancel":t.target.parentElement.remove(),seek('input[data-action="delete"][data-id="'.concat(o,'"]')).hidden=!1;break;case"confirm":deleteItemFromLocalStorage("todos",o),deleteItemFromPage(o)}}function EditConfirmedHandler(){var t=document.forms.crudForm,e=new Todo(t.id.value,t.task.value,t.priority.value,t.status.value,t.description.value,t.timestamp.value);isInputCorrect(t)&&(updateItemInLocalStorage("todos",e),updateItemInPageContent(e),$("#modalWindowEdit").modal("hide"),destroy("#modalWindowEdit"))}function seek(t){return document.querySelector(t)||!1}function destroy(t){var e=seek(t);e&&e.remove()}function getUniqueId(){return Math.floor(Date.now()*Math.random()%1e5).toString()}function addItemToLocalStorage(t,e){var o=getLocalStorage(t);(o=o||[]).push(e),localStorage.setItem(t,JSON.stringify(o))}function updateItemInLocalStorage(t,e){for(var o=getLocalStorage(t),n=0;n<o.length;n++)if(o[n].id===e.id){o[n]=e;break}localStorage.setItem(t,JSON.stringify(o))}function getLocalStorage(t){return JSON.parse(localStorage.getItem(t))}function getItemFromLocalStorage(t,e){var o=getLocalStorage(t);if(o)for(var n=0;n<o.length;n++)if(o[n].id===e)return o[n];return!1}function deleteItemFromLocalStorage(t,e){for(var o=getLocalStorage(t),n=0;n<o.length;n++)if(o[n].id===e){o.splice(n,1);break}localStorage.setItem(t,JSON.stringify(o))}window.addEventListener("DOMContentLoaded",windowHandler);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
