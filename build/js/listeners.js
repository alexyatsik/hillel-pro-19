"use strict";function windowHandler(){getApis(),new Button(seek("#app"),"Add TODO").click(addTodoHandler),loadTodoList()}function addTodoHandler(){seek("#app").appendChild(new Modal("modalWindowAdd","Add new item",[closeButtonHandler,addConfirmedHandler]).get()),new AddForm(seek("#modalWindowAddContent")),$("#modalWindowAdd").modal("show")}function addConfirmedHandler(){var d=document.forms.crudForm,e=new Todo(d.id.value,d.task.value,d.priority.value,d.status.value,d.description.value,d.timestamp.value);isInputCorrect(d)&&(addItemToLocalStorage("todos",e),addItemToPageContent(e),$("#modalWindowAdd").modal("hide"),destroy("#modalWindowAdd"))}function closeButtonHandler(){destroy("#modalWindowEdit"),destroy("#modalWindowAdd")}function actionsHandler(d){var e=d.target.dataset.action,o=d.target.dataset.id;switch(e){case"edit":seek("#app").appendChild(new Modal("modalWindowEdit","Edit item",[closeButtonHandler,EditConfirmedHandler]).get()),new EditForm(seek("#modalWindowEditContent"),o),$("#modalWindowEdit").modal("show");break;case"delete":deleteConfirmationCheck(d.target);break;case"cancel":d.target.parentElement.remove(),seek('input[data-action="delete"][data-id="'.concat(o,'"]')).hidden=!1;break;case"confirm":deleteItemFromLocalStorage("todos",o),deleteItemFromPage(o)}}function EditConfirmedHandler(){var d=document.forms.crudForm,e=new Todo(d.id.value,d.task.value,d.priority.value,d.status.value,d.description.value,d.timestamp.value);isInputCorrect(d)&&(updateItemInLocalStorage("todos",e),updateItemInPageContent(e),$("#modalWindowEdit").modal("hide"),destroy("#modalWindowEdit"))}
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpc3RlbmVycy5qcyJdLCJuYW1lcyI6WyJ3aW5kb3dIYW5kbGVyIiwiZ2V0QXBpcyIsImFkZFRvZG9IYW5kbGVyIiwic2VlayIsImNsaWNrIiwibG9hZFRvZG9MaXN0IiwiQWRkRm9ybSIsImFwcGVuZENoaWxkIiwiTW9kYWwiLCJhZGRDb25maXJtZWRIYW5kbGVyIiwiY2xvc2VCdXR0b25IYW5kbGVyIiwiYWRkSXRlbVRvTG9jYWxTdG9yYWdlIiwiYWRkSXRlbVRvUGFnZUNvbnRlbnQiLCIkIiwibW9kYWwiLCJmb3JtIiwiZG9jdW1lbnQiLCJmb3JtcyIsImNydWRGb3JtIiwiZGVzdHJveSIsImlkIiwidmFsdWUiLCJ0YXNrIiwicHJpb3JpdHkiLCJzdGF0dXMiLCJhY3Rpb25zSGFuZGxlciIsImV2ZW50IiwiYWN0aW9uIiwidGltZXN0YW1wIiwidGFyZ2V0IiwiaXNJbnB1dENvcnJlY3QiLCJ0b2RvIiwiRWRpdEZvcm0iLCJkZWxldGVDb25maXJtYXRpb25DaGVjayIsImRhdGFzZXQiLCJpdGVtSWQiLCJkZWxldGVJdGVtRnJvbUxvY2FsU3RvcmFnZSIsImRlbGV0ZUl0ZW1Gcm9tUGFnZSIsIkVkaXRDb25maXJtZWRIYW5kbGVyIiwidXBkYXRlSXRlbUluTG9jYWxTdG9yYWdlIiwidXBkYXRlSXRlbUluUGFnZUNvbnRlbnQiLCJwYXJlbnRFbGVtZW50IiwicmVtb3ZlIiwiY29uY2F0IiwiaGlkZGVuIiwiVG9kbyIsImRlc2NyaXB0aW9uIl0sIm1hcHBpbmdzIjoiQUFBQSxhQUVBLFNBQVNBLGdCQUNMQyxVQUdnQkMsSUFBQUEsT0FBaEJDLEtBQUEsUUFBQSxZQUVZQyxNQUFBRixnQkFBWkcsZUFhQSxTQUFJQyxpQkFDRkgsS0FBQSxRQUFBSSxZQUNMLElBQUFDLE1BVFcsaUJBV0hDLGVBQ0ssQ0FDR0MsbUJBVERELHNCQW1CUkUsT0FDQUMsSUFBQUEsUUFBQUEsS0FBQUEsMkJBQ0FDLEVBQUUsbUJBQW1CQyxNQUFNLFFBR2xDLFNBQUFMLHNCQWhCRyxJQUFNTSxFQUFPQyxTQUFTQyxNQUFNQyxTQWtCdkJSLEVBQUFBLElBQUFBLEtBQ0xTLEVBQVFDLEdBQUFDLE1BQ1JGLEVBQVFHLEtBQUFELE1BQ1hOLEVBQUFRLFNBQUFGLE1BaEJPTixFQUFLUyxPQUFPSCxNQWtCcEJOLEVBQVNVLFlBQWVDLE1BQ2RDLEVBQU1DLFVBQVNDLE9BR3JCQyxlQUFBZixLQUNJSixzQkFBQSxRQUFBb0IsR0FDSTVCLHFCQUFhSSxHQVNiTSxFQUFJbUIsbUJBQWNsQixNQUFBLFFBQ2hCSyxRQUFBLG9CQUdGYyxTQUFBQSxxQkFDQWQsUUFBQSxvQkF2QlJBLFFBQVEsbUJBMEJBaEIsU0FBQUEsZUFBSXVCLEdBQ0osSUFBQUMsRUFBQUQsRUFBQUcsT0FBQUssUUFBQVAsT0F0QkZRLEVBQVNULEVBQU1HLE9BQU9LLFFBQVFkLEdBd0I1QmdCLE9BQUFBLEdBQ0FDLElBQUFBLE9BQ0FsQyxLQUFBLFFBQUFJLFlBeEJSLElBQUFDLE1BMEJILGtCQXJCbUIsWUF1Qlg4QixDQUNpQnJCLG1CQUVsQkYsdUJBUUFlLE9BQ0FTLElBQUFBLFNBQUFBLEtBQXlCLDJCQUF6QkosR0FDQUssRUFBQUEsb0JBQUExQixNQUFBLFFBQ0UsTUFDRkssSUFBUSxTQUNYYyx3QkFBQVAsRUFBQUcsUUFDSixNQTVCTyxJQUFLLFNBQ0RILEVBQU1HLE9BQU9ZLGNBQWNDLFNBQzNCdkMsS0FBSSx3Q0FBQXdDLE9BQXlDUixFQUF6QyxPQUFxRFMsUUFBUyxFQUNsRSxNQUNKLElBQUssVUFDRFIsMkJBQTJCLFFBQVNELEdBQ3BDRSxtQkFBbUJGLElBSy9CLFNBQVNHLHVCQUNMLElBQU12QixFQUFPQyxTQUFTQyxNQUFNQyxTQUN0QmEsRUFBTyxJQUFJYyxLQUNiOUIsRUFBS0ssR0FBR0MsTUFDUk4sRUFBS08sS0FBS0QsTUFDVk4sRUFBS1EsU0FBU0YsTUFDZE4sRUFBS1MsT0FBT0gsTUFDWk4sRUFBSytCLFlBQVl6QixNQUNqQk4sRUFBS2EsVUFBVVAsT0FHZlMsZUFBZWYsS0FDZndCLHlCQUF5QixRQUFTUixHQUNsQ1Msd0JBQXdCVCxHQUN4QmxCLEVBQUUsb0JBQW9CQyxNQUFNLFFBQzVCSyxRQUFRIiwiZmlsZSI6Imxpc3RlbmVycy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcclxuXHJcbmZ1bmN0aW9uIHdpbmRvd0hhbmRsZXIoKSB7XHJcbiAgICBnZXRBcGlzKCk7XHJcblxyXG4gICAgY29uc3QgYWRkQnV0dG9uID0gbmV3IEJ1dHRvbihzZWVrKCcjYXBwJyksICdBZGQgVE9ETycpO1xyXG4gICAgYWRkQnV0dG9uLmNsaWNrKGFkZFRvZG9IYW5kbGVyKTtcclxuXHJcbiAgICBsb2FkVG9kb0xpc3QoKTtcclxufVxyXG5cclxuZnVuY3Rpb24gYWRkVG9kb0hhbmRsZXIoKSB7XHJcbiAgICBzZWVrKCcjYXBwJykuYXBwZW5kQ2hpbGQoXHJcbiAgICAgICAgbmV3IE1vZGFsKFxyXG4gICAgICAgICAgICAnbW9kYWxXaW5kb3dBZGQnLCBcclxuICAgICAgICAgICAgJ0FkZCBuZXcgaXRlbScsIFxyXG4gICAgICAgICAgICBbXHJcbiAgICAgICAgICAgICAgICBjbG9zZUJ1dHRvbkhhbmRsZXIsIFxyXG4gICAgICAgICAgICAgICAgYWRkQ29uZmlybWVkSGFuZGxlclxyXG4gICAgICAgICAgICBdXHJcbiAgICAgICAgKS5nZXQoKSk7XHJcbiAgICBuZXcgQWRkRm9ybShzZWVrKCcjbW9kYWxXaW5kb3dBZGRDb250ZW50JykpO1xyXG4gICAgJCgnI21vZGFsV2luZG93QWRkJykubW9kYWwoJ3Nob3cnKTtcclxufVxyXG5cclxuZnVuY3Rpb24gYWRkQ29uZmlybWVkSGFuZGxlcigpIHtcclxuICAgIGNvbnN0IGZvcm0gPSBkb2N1bWVudC5mb3Jtcy5jcnVkRm9ybTtcclxuICAgIGNvbnN0IHRvZG8gPSBuZXcgVG9kbyhcclxuICAgICAgICBmb3JtLmlkLnZhbHVlLFxyXG4gICAgICAgIGZvcm0udGFzay52YWx1ZSxcclxuICAgICAgICBmb3JtLnByaW9yaXR5LnZhbHVlLFxyXG4gICAgICAgIGZvcm0uc3RhdHVzLnZhbHVlLFxyXG4gICAgICAgIGZvcm0uZGVzY3JpcHRpb24udmFsdWUsXHJcbiAgICAgICAgZm9ybS50aW1lc3RhbXAudmFsdWVcclxuICAgIClcclxuICAgIFxyXG4gICAgaWYgKGlzSW5wdXRDb3JyZWN0KGZvcm0pKSB7XHJcbiAgICAgICAgYWRkSXRlbVRvTG9jYWxTdG9yYWdlKCd0b2RvcycsIHRvZG8pO1xyXG4gICAgICAgIGFkZEl0ZW1Ub1BhZ2VDb250ZW50KHRvZG8pO1xyXG4gICAgICAgICQoJyNtb2RhbFdpbmRvd0FkZCcpLm1vZGFsKCdoaWRlJyk7XHJcbiAgICAgICAgZGVzdHJveSgnI21vZGFsV2luZG93QWRkJyk7XHJcbiAgICB9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGNsb3NlQnV0dG9uSGFuZGxlcigpIHtcclxuICAgIGRlc3Ryb3koJyNtb2RhbFdpbmRvd0VkaXQnKTtcclxuICAgIGRlc3Ryb3koJyNtb2RhbFdpbmRvd0FkZCcpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBhY3Rpb25zSGFuZGxlcihldmVudCkge1xyXG4gICAgY29uc3QgYWN0aW9uID0gZXZlbnQudGFyZ2V0LmRhdGFzZXQuYWN0aW9uO1xyXG4gICAgY29uc3QgaXRlbUlkID0gZXZlbnQudGFyZ2V0LmRhdGFzZXQuaWQ7XHJcblxyXG4gICAgc3dpdGNoIChhY3Rpb24pIHtcclxuICAgICAgICBjYXNlICdlZGl0JzpcclxuICAgICAgICAgICAgc2VlaygnI2FwcCcpLmFwcGVuZENoaWxkKFxyXG4gICAgICAgICAgICAgICAgbmV3IE1vZGFsKFxyXG4gICAgICAgICAgICAgICAgICAgICdtb2RhbFdpbmRvd0VkaXQnLCBcclxuICAgICAgICAgICAgICAgICAgICAnRWRpdCBpdGVtJywgXHJcbiAgICAgICAgICAgICAgICAgICAgW1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjbG9zZUJ1dHRvbkhhbmRsZXIsIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBFZGl0Q29uZmlybWVkSGFuZGxlclxyXG4gICAgICAgICAgICAgICAgICAgIF1cclxuICAgICAgICAgICAgICAgICkuZ2V0KCkpO1xyXG4gICAgICAgICAgICBuZXcgRWRpdEZvcm0oc2VlaygnI21vZGFsV2luZG93RWRpdENvbnRlbnQnKSwgaXRlbUlkKTtcclxuICAgICAgICAgICAgJCgnI21vZGFsV2luZG93RWRpdCcpLm1vZGFsKCdzaG93Jyk7XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIGNhc2UgJ2RlbGV0ZSc6XHJcbiAgICAgICAgICAgIGRlbGV0ZUNvbmZpcm1hdGlvbkNoZWNrKGV2ZW50LnRhcmdldCk7XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIGNhc2UgJ2NhbmNlbCc6XHJcbiAgICAgICAgICAgIGV2ZW50LnRhcmdldC5wYXJlbnRFbGVtZW50LnJlbW92ZSgpO1xyXG4gICAgICAgICAgICBzZWVrKGBpbnB1dFtkYXRhLWFjdGlvbj1cImRlbGV0ZVwiXVtkYXRhLWlkPVwiJHtpdGVtSWR9XCJdYCkuaGlkZGVuID0gZmFsc2U7XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIGNhc2UgJ2NvbmZpcm0nOlxyXG4gICAgICAgICAgICBkZWxldGVJdGVtRnJvbUxvY2FsU3RvcmFnZSgndG9kb3MnLCBpdGVtSWQpO1xyXG4gICAgICAgICAgICBkZWxldGVJdGVtRnJvbVBhZ2UoaXRlbUlkKTtcclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICB9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIEVkaXRDb25maXJtZWRIYW5kbGVyKCkge1xyXG4gICAgY29uc3QgZm9ybSA9IGRvY3VtZW50LmZvcm1zLmNydWRGb3JtO1xyXG4gICAgY29uc3QgdG9kbyA9IG5ldyBUb2RvKFxyXG4gICAgICAgIGZvcm0uaWQudmFsdWUsXHJcbiAgICAgICAgZm9ybS50YXNrLnZhbHVlLFxyXG4gICAgICAgIGZvcm0ucHJpb3JpdHkudmFsdWUsXHJcbiAgICAgICAgZm9ybS5zdGF0dXMudmFsdWUsXHJcbiAgICAgICAgZm9ybS5kZXNjcmlwdGlvbi52YWx1ZSxcclxuICAgICAgICBmb3JtLnRpbWVzdGFtcC52YWx1ZVxyXG4gICAgKVxyXG4gICAgXHJcbiAgICBpZiAoaXNJbnB1dENvcnJlY3QoZm9ybSkpIHtcclxuICAgICAgICB1cGRhdGVJdGVtSW5Mb2NhbFN0b3JhZ2UoJ3RvZG9zJywgdG9kbyk7XHJcbiAgICAgICAgdXBkYXRlSXRlbUluUGFnZUNvbnRlbnQodG9kbyk7XHJcbiAgICAgICAgJCgnI21vZGFsV2luZG93RWRpdCcpLm1vZGFsKCdoaWRlJyk7XHJcbiAgICAgICAgZGVzdHJveSgnI21vZGFsV2luZG93RWRpdCcpO1xyXG4gICAgfVxyXG59Il19
